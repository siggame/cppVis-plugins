#define TYPES_OF_PARTS 8
#define NUM_OF_UNIQUE_PARTS_FOR_EACH_TYPE 9
#define PART_LENGTH 4

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string>

namespace virusBuilder
{
    static bool parts[8 /*Type*/][9 /*Number unique parts for that type*/][4][4] = 
    {
        { /* Hand */
            {
                { 0, 1, 1, 0 },
                { 1, 1, 1, 0 },
                { 1, 0, 1, 0 },
                { 1, 0, 1, 0 }
            },
            {
                { 0, 0, 1, 1 },
                { 0, 1, 0, 0 },
                { 1, 0, 0, 1 },
                { 1, 1, 1, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 1 },
                { 0, 0, 1, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 1, 0, 0 },
                { 0, 0, 1, 0 },
                { 1, 1, 1, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 1, 1, 1 },
                { 1, 1, 1, 0 },
                { 0, 0, 0, 0 }
            },
            {
                { 1, 0, 0, 0 },
                { 1, 1, 0, 0 },
                { 0, 1, 1, 0 },
                { 0, 0, 1, 1 }
            },
            {
                { 0, 1, 1, 0 },
                { 1, 0, 0, 1 },
                { 1, 0, 0, 0 },
                { 0, 1, 1, 1 }
            },
            {
                { 0, 0, 1, 1 },
                { 0, 1, 1, 0 },
                { 0, 1, 1, 0 },
                { 0, 1, 1, 0 }
            }
        },
        { /* Hair */
            {
                { 0, 0, 0, 0 },
                { 0, 1, 0, 0 },
                { 0, 0, 1, 0 },
                { 0, 1, 1, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 1, 1, 0 },
                { 0, 0, 1, 0 },
                { 0, 0, 1, 1 }
            },
            {
                { 0, 0, 0, 0 },
                { 1, 1, 0, 0 },
                { 1, 1, 1, 0 },
                { 1, 1, 0, 1 } 
            },
            {
                { 0, 1, 0, 0 },
                { 0, 1, 0, 1 },
                { 0, 1, 1, 1 },
                { 1, 1, 0, 1 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 1, 0, 0 },
                { 1, 1, 1, 0 },
                { 0, 1, 0, 1 }
            },
            {
                { 0, 0, 0, 0 },
                { 1, 1, 0, 0 },
                { 1, 1, 1, 0 },
                { 0, 1, 1, 1 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 1, 0 },
                { 0, 1, 1, 1 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 0, 0, 1 },
                { 0, 0, 1, 0 },
                { 0, 1, 1, 0 },
            },
            {
                { 0, 1, 0, 0 },
                { 0, 0, 1, 0 },
                { 0, 0, 1, 0 },
                { 0, 0, 0, 1 }
            }
        },
        { /* Arms */
            {
                { 1, 1, 1, 0 },
                { 0, 1, 1, 1 },
                { 0, 0, 0, 1 },
                { 0, 0, 0, 0 }
            },
            {
                { 1, 1, 1, 1 },
                { 1, 1, 1, 1 },
                { 0, 1, 1, 1 },
                { 0, 1, 1, 0 }
            },
            {
                { 0, 1, 1, 1 },
                { 1, 0, 0, 1 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 1, 1, 1 },
                { 1, 1, 1, 1 },
                { 1, 1, 0, 1 }
            },
            {
                { 0, 1, 1, 0 },
                { 0, 1, 1, 1 },
                { 0, 0, 0, 1 },
                { 0, 0, 0, 0 }
            },
            {
                { 0, 1, 0, 0 },
                { 0, 1, 0, 1 },
                { 0, 1, 1, 0 },
                { 0, 1, 0, 0 }
            },
            {
                { 0, 0, 0, 1 },
                { 0, 0, 0, 0 },
                { 0, 0, 1, 1 },
                { 0, 1, 1, 1 }
            },
            {
                { 0, 1, 0, 1 },
                { 0, 0, 1, 1 },
                { 0, 0, 0, 0 },
                { 0, 1, 1, 1 }
            },
            {
                { 0, 1, 1, 1 },
                { 1, 0, 0, 0 },
                { 1, 1, 0, 0 },
                { 0, 1, 1, 0 }
            }
        },
        { /* Face */
            {
                { 1, 0, 1, 1 },
                { 1, 0, 0, 1 },
                { 1, 1, 1, 1 },
                { 0, 1, 1, 1 }
            },
            {
                { 0, 1, 1, 1 },
                { 1, 1, 0, 1 },
                { 1, 1, 0, 1 },
                { 0, 1, 1, 1 }
            },
            {
                { 1, 1, 1, 1 },
                { 1, 0, 0, 1 },
                { 1, 1, 1, 1 },
                { 0, 0, 1, 1 }
            },
            {
                { 1, 1, 0, 1 },
                { 1, 1, 0, 1 },
                { 0, 1, 1, 1 },
                { 0, 0, 0, 1 }
            },
            {
                { 0, 1, 0, 1 },
                { 1, 1, 1, 1 },
                { 1, 1, 0, 1 },
                { 0, 1, 1, 0 }
            },
            {
                { 1, 1, 1, 1 },
                { 0, 1, 1, 1 },
                { 1, 1, 1, 0 },
                { 1, 1, 1, 1 }
            },
            {
                { 1, 1, 1, 1 },
                { 1, 0, 0, 1 },
                { 0, 1, 1, 1 },
                { 0, 0, 1, 0 }
            },
            {
                { 0, 1, 1, 1 },
                { 0, 1, 1, 1 },
                { 1, 1, 1, 0 },
                { 1, 1, 1, 0 }
            },
            {
                { 0, 1, 0, 1 },
                { 1, 1, 1, 1 },
                { 1, 1, 1, 1 },
                { 1, 1, 0, 0 }
            }
        },
        { /* Leg */
            {
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 1 }
            },
            {
                { 0, 1, 1, 0 },
                { 1, 1, 1, 1 },
                { 0, 1, 1, 1 },
                { 0, 0, 1, 1 }
            },
            {
                { 0, 1, 1, 0 },
                { 0, 1, 1, 1 },
                { 1, 1, 1, 0 },
                { 0, 1, 1, 0 }
            },
            {
                { 0, 0, 1, 0 },
                { 0, 0, 0, 1 },
                { 0, 0, 0, 1 },
                { 0, 0, 1, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 0, 1, 1 },
                { 1, 1, 1, 1 },
                { 0, 0, 0, 0 }
            },
            {
                { 0, 0, 1, 1 },
                { 0, 1, 0, 0 },
                { 1, 0, 0, 0 },
                { 1, 0, 0, 0 }
            },
            {
                { 0, 0, 0, 1 },
                { 0, 0, 0, 1 },
                { 0, 1, 1, 1 },
                { 0, 1, 1, 1 }
            },
            {
                { 0, 1, 1, 1 },
                { 0, 0, 1, 0 },
                { 0, 1, 0, 0 },
                { 1, 1, 0, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 1, 1, 0 },
                { 1, 1, 0, 0 },
                { 1, 1, 1, 1 }
            }
        },
        { /* Body */
            {
                { 0, 0, 1, 1 },
                { 0, 1, 1, 1 },
                { 0, 1, 1, 1 },
                { 1, 1, 0, 1 }
            },
            {
                { 0, 0, 1, 1 },
                { 0, 1, 1, 0 },
                { 1, 1, 1, 1 },
                { 1, 1, 1, 1 }
            },
            {
                { 0, 1, 1, 1 },
                { 1, 1, 0, 1 },
                { 1, 1, 0, 0 },
                { 1, 1, 1, 1 }
            },
            {
                { 0, 0, 1, 1 },
                { 1, 1, 1, 1 },
                { 1, 1, 1, 1 },
                { 1, 1, 0, 1 }
            },
            {
                { 1, 1, 1, 0 },
                { 1, 1, 1, 0 },
                { 0, 1, 1, 0 },
                { 0, 0, 1, 1 }
            },
            {
                { 1, 1, 1, 0 },
                { 1, 1, 1, 1 },
                { 1, 1, 1, 1 },
                { 0, 1, 1, 0 }
            },
            {
                { 1, 1, 0, 0 },
                { 1, 1, 1, 0 },
                { 1, 1, 1, 1 },
                { 1, 1, 1, 0 }
            },
            {
                { 0, 1, 1, 1 },
                { 0, 1, 1, 0 },
                { 1, 1, 0, 0 },
                { 0, 1, 1, 1 }
            },
            {
                { 0, 0, 1, 1 },
                { 0, 1, 1, 1 },
                { 1, 1, 1, 1 },
                { 0, 0, 1, 1 }
            }
        },
        { /* Foot */
            {
                { 0, 0, 1, 1 },
                { 0, 0, 1, 1 },
                { 0, 0, 0, 1 },
                { 0, 0, 0, 0 }
            },
            {
                { 0, 0, 1, 1 },
                { 0, 1, 0, 1 },
                { 1, 0, 1, 0 },
                { 1, 1, 0, 0 }
            },
            {
                { 0, 0, 1, 1 },
                { 1, 1, 1, 1 },
                { 0, 1, 1, 0 },
                { 0, 0, 1, 1 }
            },
            {
                { 0, 1, 1, 0 },
                { 1, 1, 0, 0 },
                { 1, 1, 0, 0 },
                { 1, 1, 1, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 }
            },
            {
                { 0, 1, 1, 1 },
                { 0, 1, 1, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 }
            },
            {
                { 0, 1, 1, 1 },
                { 1, 1, 0, 0 },
                { 1, 0, 0, 0 },
                { 0, 1, 1, 0 }
            },
            {
                { 0, 1, 1, 0 },
                { 1, 1, 1, 0 },
                { 0, 0, 1, 0 },
                { 0, 0, 0, 0 }
            },
            {
                { 0, 0, 0, 1 },
                { 0, 1, 1, 1 },
                { 0, 1, 0, 1 },
                { 0, 1, 1, 1 }
            }
        },
        { /* Tail */
            {
                { 1, 0, 0, 1 },
                { 1, 0, 0, 1 },
                { 1, 0, 0, 0 },
                { 1, 0, 0, 0 }
            },
            {
                { 1, 1, 0, 1 },
                { 0, 1, 0, 1 },
                { 0, 0, 0, 1 },
                { 0, 0, 1, 1 }
            },
            {
                { 1, 1, 0, 0 },
                { 1, 0, 0, 0 },
                { 1, 0, 0, 0 },
                { 0, 1, 1, 0 }
            },
            {
                { 1, 1, 0, 0 },
                { 1, 1, 0, 0 },
                { 1, 0, 0, 0 },
                { 0, 1, 1, 0 }
            },
            {
                { 0, 0, 1, 0 },
                { 0, 1, 0, 0 },
                { 1, 0, 0, 0 },
                { 0, 1, 1, 0 }
            },
            {
                { 1, 1, 1, 0 },
                { 1, 1, 0, 0 },
                { 1, 0, 0, 0 },
                { 1, 0, 0, 0 }
            },
            {
                { 1, 1, 0, 0 },
                { 0, 1, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 }
            },
            {
                { 1, 0, 0, 1 },
                { 0, 1, 1, 0 },
                { 0, 1, 1, 0 },
                { 0, 0, 1, 0 }
            },
            {
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 },
                { 0, 0, 0, 0 }
            }
        }
    }; // END: parts[][][][]
    
    static bool androidEasterEgg[16][8] = 
    {
        { 0, 0, 0, 1,   0, 0, 0, 0 },
        { 0, 0, 0, 0,   1, 0, 1, 1 },
        { 0, 0, 0, 0,   0, 1, 1, 1 },
        { 0, 0, 0, 0,   1, 1, 0, 1 },
        
        { 0, 0, 0, 0,   1, 1, 1, 1 },
        { 0, 0, 0, 0,   0, 0, 0, 0 },
        { 0, 1, 1, 0,   1, 1, 1, 1 },
        { 0, 1, 1, 0,   1, 1, 1, 1 },
        
        { 0, 1, 1, 0,   1, 1, 1, 1 },
        { 0, 1, 1, 0,   1, 1, 1, 1 },
        { 0, 1, 1, 0,   1, 1, 1, 1 },
        { 0, 0, 0, 0,   1, 1, 1, 1 },
        
        { 0, 0, 0, 0,   1, 1, 1, 1 },
        { 0, 0, 0, 0,   0, 1, 1, 0 },
        { 0, 0, 0, 0,   0, 1, 1, 0 },
        { 0, 0, 0, 0,   0, 1, 1, 0 }
    }; // END: androidEasterEgg[][]
}

using namespace std;


// Function: Builds a randomly generated Virus image as a 16x16 bool to use
// Params:   teamName: A string of the team's name, so that it will generate a random but consistant virus for each team
// Returns:  a bool** of size 16x16 that represents where pixels of the virus are (true means color, false means transperant) 
bool ** buildVirus(string teamName)
{
    // the virus image to return
    bool ** virus = new bool*[16];
    for(int i = 0; i < 16; i++)
    {
        virus[i] = new bool[16];
        
        for(int j = 0; j < 16; j++)
          virus[i][j] = false;
    }
    
    // check for easter eggs
    if(strcmp(teamName.c_str(), "Droids you're lookin for") == 0)
    {
        for(int x = 0; x < 8; x++)
            for(int y = 0; y < 16; y++)
                virus[x][y] = virusBuilder::androidEasterEgg[y][x];
    }
    else if(strcmp(teamName.c_str(), "Staff Ghost") == 0)
    {
      return virus;
    }
    else
    {
        // hash the team's name to seed rand()
        int hash = 0;
        int offset = 'a' - 1;
        
        for(string::const_iterator it= teamName.begin(); it != teamName.end(); ++it)
            hash = hash << 1 | (*it - offset);  
        
        // seed rand with the has of their team name so it is random for everyone, but every team gets the same virus generated
        srand(hash + 1);
        
        
        
        
        short xOffset = 0, yOffset = 0;
        
        for(short type = 0; type < TYPES_OF_PARTS; type++ )
        {
            short partToUse = rand()%NUM_OF_UNIQUE_PARTS_FOR_EACH_TYPE;
             
            for(short x = 0; x < PART_LENGTH; x++)
                for(short y = 0; y < PART_LENGTH; y++)
                    virus[x + xOffset][y + yOffset] = (bool)virusBuilder::parts[type][partToUse][x][y];
            
            xOffset += 4;
            if(xOffset == 8)
            {
                yOffset += 4;
                xOffset = 0;
            }
        }
    }
    
    // reflect the image we made
    for(int y = 0; y < 16; y++)
        for(int x = 7; x >= 0; x--)
            virus[x + 8][y] = virus[7 - x][y];
    
    return virus;
}
